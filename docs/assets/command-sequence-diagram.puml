@startuml
!theme materia-outline

skinparam ArrowColor #9803fc
skinparam BackgroundColor #FFFFFF
skinparam ArrowColor #9803fc
skinparam ActorBorderColor #9803fc
skinparam ActorFontColor #9803fc
skinparam ActorBackgroundColor #9803fc
skinparam ParticipantFontColor #9803fc
skinparam ParticipantBorderColor #9803fc
skinparam ParticipantBackgroundColor #FFFFFF
skinparam {
 SequenceGroupBorderColor #9803fc
}

participant Console
participant CommandParser
participant LookupTable
participant Task
participant Command

-> CommandParser: registerCommand(key, class, description)
activate CommandParser

CommandParser -> LookupTable: insert(key, class, description)
deactivate CommandParser

...

-> Console: String command.
activate Console

Console -> CommandParser: parseCommand(cmd)
activate CommandParser

CommandParser -> CommandParser: Tokenize command.

CommandParser -> LookupTable: getCommandMetadata()
LookupTable --> CommandParser

alt metadata == null
  CommandParser --> Console: Command not found.
  Console -> Console: Display that the comman is unknown
else else
  create Command
  CommandParser -> Command: Create correct instance using reflection\nand command metadata.
  CommandParser -> Command: setContext(this.context)
  CommandParser -> Command: setArgs(tokenizedArgs)
  CommandParser --> Console: Command instance.
  deactivate CommandParser

  Console -> Command: setInputStream(this.inputStream)
  Console -> Command: setWriter(this.writer)

  create Task
  Console -> Task: createTask(currentCommand)
  activate Task

  Task -> Command: execute()
  deactivate Task
end

deactivate Console

@enduml