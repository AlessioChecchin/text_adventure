@startuml
!theme materia-outline

skinparam ArrowColor #9803fc
skinparam BackgroundColor #FFFFFF
skinparam ArrowColor #9803fc
skinparam ActorBorderColor #9803fc
skinparam ActorFontColor #9803fc
skinparam ActorBackgroundColor #9803fc
skinparam ParticipantFontColor #9803fc
skinparam ParticipantBorderColor #9803fc
skinparam ParticipantBackgroundColor #FFFFFF
skinparam {
 SequenceGroupBorderColor #9803fc
}


actor User
participant CmdFight
participant CmdAttack
participant ApplicationContext
participant Game
participant StoryNode
participant RandomCollection
participant Player
participant Monster


CmdFight -> CmdAttack: attack
CmdAttack -> ApplicationContext: get current game
ApplicationContext --> CmdAttack
CmdAttack -> Game: get current StoryNode and current Player
Game --> CmdAttack
CmdAttack -> StoryNode: get monster in current StoryNode
StoryNode --> CmdAttack

CmdAttack -> RandomCollection: get a random decision handler \n(between DODGE and ATTACK)
RandomCollection --> CmdAttack
CmdAttack -> CmdAttack: monsterMove = next decision from the decision handler
alt monsterMove = DODGE
  alt monster doens not have 'dodge' left
    CmdAttack -> CmdAttack : monsterMove = ATTACK
  end
end
alt monster is attacking
  CmdAttack -> Player: damange = player attack damage
  Player --> CmdAttack
  CmdAttack -> Monster: hit monster and reduce its hp by 'damage' hp
  CmdAttack -> User: "Monster hit"
else monster is dodging
  CmdAttack -> User: "Monster dodged"
end
CmdAttack -> Monster: monsterDamage = monster attack damage
Monster --> CmdAttack
CmdAttack -> Player: hit Player and reduce its hp by 'monsterDamage' hp
Player --> CmdAttack
CmdAttack -> User: "Player hit"





@enduml